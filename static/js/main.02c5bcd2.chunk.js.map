{"version":3,"sources":["Components/LandingPage.js","actions/restaurantActions.js","constant.js","Components/AddingRestaurant.js","Components/EditRestaurant.js","Components/ViewMenu.js","App.js","serviceWorker.js","reducers/restaurantReducer.js","store.js","index.js"],"names":["LandingPage","Title","Typography","restaurantList","useSelector","state","restaurantReducer","columns","title","dataIndex","key","render","text","record","size","to","gutter","span","level","block","dataSource","pagination","resturantList","data","dispatch","a","type","payload","AddingRestaurant","props","Form","useForm","form","useDispatch","style","textAlign","labelCol","wrapperCol","ref","initialValues","name","address","rating","avgcost","dt","price","dish","cuisine","onFinish","values","console","log","history","push","onFinishFailed","errorInfo","Item","label","rules","required","message","placeholder","htmlType","onClick","current","resetFields","EditRestaurant","match","params","toString","restaurantData","find","x","menu","finaldat","ViewMenu","Header","Layout","Content","Panel","Collapse","useState","visible","setVisible","drawer","setDrawer","backgroundColor","color","defaultActiveKey","accordion","expandIconPosition","category","map","header","className","menuItems","bordered","width","placement","closable","onClose","App","Footer","useEffect","axios","get","products","fetchData","exact","path","component","AddRestaurant","Boolean","window","location","hostname","getUpadtedList","newValue","newData","z","length","editRestaurantData","items","foundIndex","findIndex","addMenuItems","obj","objMenu","forEach","element","y","reducer","combineReducers","action","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.02c5bcd2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table, Row, Col, Button, Space, Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function LandingPage() {\n  const { Title } = Typography;\n\n  const restaurantReducer = useSelector((state) => state.restaurantReducer);\n  const { restaurantList } = restaurantReducer;\n\n  const columns = [\n    {\n      title: \"Restaurant Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n\n    {\n      title: \"Address\",\n      dataIndex: \"address\",\n      key: \"address\",\n    },\n    {\n      title: \"Rating\",\n      dataIndex: \"rating\",\n      key: \"rating\",\n    },\n    {\n      title: \"Delivery TIme (in mins)\",\n      dataIndex: \"dt\",\n      key: \"dt\",\n    },\n    {\n      title: \"Average Cost (Rs)\",\n      dataIndex: \"avgcost\",\n      key: \"avgcost\",\n    },\n\n    {\n      title: \"Action\",\n      key: \"action\",\n\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <Link to={\"/editRestaurant/\" + record.key}>Edit Restaurant</Link>\n          <Link to={\"/viewresturant/\" + record.key}>View Menu</Link>\n        </Space>\n      ),\n    },\n  ];\n  return (\n    <div>\n      <Row gutter={[40, 0]}>\n        <Col span={18}>\n          <Title level={2}>List of Restaurant's</Title>\n        </Col>\n        <Col span={6}>\n          <Link to={\"/addRestaurant\"}>\n            <Button block>Add Restaurant</Button>\n          </Link>\n        </Col>\n      </Row>\n      <Row gutter={[40, 0]}>\n        <Col span={24}>\n          <Table\n            columns={columns}\n            dataSource={restaurantList}\n            pagination={false}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import { RESTAURANT_LIST_DATA,EDIT_RESTAURANT  , ADD_RESTAURANT , ADD_MENU_ITEM} from \"../constant\";\n\nconst resturantList = (data) => async (dispatch) => {\n  dispatch({ type: RESTAURANT_LIST_DATA, payload: data });\n};\n\nconst addResturant = (data) => async (dispatch) => {\n    dispatch({ type: ADD_RESTAURANT, payload: data });\n  };\n\n  const editResturant = (data) => async (dispatch) => {\n    dispatch({ type: EDIT_RESTAURANT, payload: data });\n  };\n\n\n  const addMenuItem = (data) => async (dispatch) => {\n    dispatch({ type: ADD_MENU_ITEM, payload: data });\n  };\n\nexport { resturantList , addResturant , editResturant , addMenuItem};\n","export const RESTAURANT_LIST_DATA = \"RESTAURANT_LIST_DATA\";\nexport const ADD_RESTAURANT = \"ADD_RESTAURANT\";\nexport const EDIT_RESTAURANT = \"EDIT_RESTAURANT\";\nexport const ADD_MENU_ITEM = \"ADD_MENU_ITEM\";\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Typography, Input, Form, Button } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { addResturant } from \"../actions/restaurantActions\";\nexport default function AddingRestaurant(props) {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const initialValues = {\n    name: \"\",\n    address: \"\",\n    rating: \"\",\n    avgcost: \"\",\n    dt: \"\",\n    price: \"\",\n    dish: \"\",\n    cuisine: \"\",\n  };\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n  const { Title } = Typography;\n\n  const onFinish = (values) => {\n    console.log(values, \"test123\");\n    dispatch(addResturant(values));\n    props.history.push(\"/\");\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(errorInfo, \"test\");\n  };\n\n  const onReset = () => {\n    form.current.resetFields();\n  };\n\n  return (\n    <div>\n      <Row gutter={[40, 0]}>\n        <Col span={23}>\n          <Title style={{ textAlign: \"center\" }} level={2}>\n            Adding Restaurant Form\n          </Title>\n        </Col>\n      </Row>\n      <Row gutter={[40, 0]}>\n        <Col span={18}>\n          <Form\n            {...layout}\n            ref={form}\n            initialValues={initialValues}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"Restaurant Name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your name\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Please Enter  Restaurant Name\" />\n            </Form.Item>\n            <Form.Item\n              name=\"address\"\n              label=\"Address\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input Address\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Please Enter  Address\" />\n            </Form.Item>\n\n            <Form.Item name=\"rating\" label=\"Rating\">\n              <Input placeholder=\"Please Enter  Rating\" />\n            </Form.Item>\n\n            <Form.Item name=\"dt\" label=\"Delivery TIme (in mins)\">\n              <Input placeholder=\"Please Enter  deliver Time\" />\n            </Form.Item>\n\n            <Form.Item name=\"avgcost\" label=\"Average Cost\">\n              <Input placeholder=\"Please Enter  Average Cost\" />\n            </Form.Item>\n            <Form.Item\n              name=\"cuisine\"\n              label=\"Cusine Name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input Cuisine\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Please Enter  Cuisine\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"dish\"\n              label=\"Dish Name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input dish\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Please Enter dish name\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"price\"\n              label=\"Dish Price\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input dish price\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Please Enter  price\" />\n            </Form.Item>\n            <div style={{ textAlign: \"center\" }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Save\n              </Button>\n\n              <Button type=\"reset\" onClick={onReset}>\n                Reset\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Typography, Input, Form, Button } from \"antd\";\nimport { editResturant } from \"../actions/restaurantActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function EditRestaurant(props) {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const key = props.match.params.key.toString();\n  const restaurantReducer = useSelector((state) => state.restaurantReducer);\n  const { restaurantList } = restaurantReducer;\n  const restaurantData = restaurantList.find((x) => x.key === key);\n\n  const initialValues = {\n    name: restaurantData.name,\n    address: restaurantData.address,\n    rating: restaurantData.rating,\n    avgcost: restaurantData.avgcost,\n    dt: restaurantData.dt,\n  };\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n  const { Title } = Typography;\n\n  const onFinish = (values) => {\n    var key = { key: restaurantData.key, menu: restaurantData.menu };\n    let finaldat = { ...values, ...key };\n\n    console.log(finaldat, \"restaurantData\");\n    dispatch(editResturant(finaldat));\n    props.history.push(\"/\");\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(errorInfo, \"test\");\n  };\n\n  const onReset = () => {\n    form.current.resetFields();\n  };\n\n  return (\n    <div>\n      <Row gutter={[40, 0]}>\n        <Col span={23}>\n          <Title style={{ textAlign: \"center\" }} level={2}>\n            Edit Restaurant Details\n          </Title>\n        </Col>\n      </Row>\n      <Row gutter={[40, 0]}>\n        <Col span={18}>\n          <Form\n            {...layout}\n            ref={form}\n            initialValues={initialValues}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"Restaurant Name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your name\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Please Enter  Restaurant Name\" />\n            </Form.Item>\n            <Form.Item\n              name=\"address\"\n              label=\"Address\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input Address\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Please Enter  Address\" />\n            </Form.Item>\n\n            <Form.Item name=\"rating\" label=\"Rating\">\n              <Input placeholder=\"Please Enter  Rating\" />\n            </Form.Item>\n\n            <Form.Item name=\"dt\" label=\"Delivery TIme (in mins)\">\n              <Input placeholder=\"Please Enter  deliver Time\" />\n            </Form.Item>\n\n            <Form.Item name=\"avgcost\" label=\"Average Cost\">\n              <Input placeholder=\"Please Enter  Average Cost\" />\n            </Form.Item>\n\n            <div style={{ textAlign: \"center\" }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update\n              </Button>\n\n              <Button type=\"reset\" onClick={onReset}>\n                Reset\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Collapse,\n  Card,\n  Input,\n  Typography,\n  Button,\n  Drawer,\n  Form,\n} from \"antd\";\nimport { addMenuItem } from \"../actions/restaurantActions\";\nexport default function ViewMenu(props) {\n  const { Header, Content } = Layout;\n  const [form] = Form.useForm();\n  const { Panel } = Collapse;\n  const { Title } = Typography;\n  const expandIconPosition = \"right\";\n  const [visible, setVisible] = useState(false);\n  const [drawer, setDrawer] = useState(false);\n  const key = props.match.params.key.toString();\n  const restaurantReducer = useSelector((state) => state.restaurantReducer);\n  const { restaurantList } = restaurantReducer;\n  const restaurantData = restaurantList.find((x) => x.key === key);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    cuisine: \"\",\n    dish: \"\",\n    price: \"\",\n  };\n\n  const showDrawer = () => {\n    setVisible(true);\n    setDrawer(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n    setDrawer(false);\n  };\n\n  const onFinish = (values) => {\n    var key = { key: restaurantData.key };\n    let finaldat = { ...values, ...key };\n    console.log(finaldat, \"test123\");\n    dispatch(addMenuItem(finaldat));\n    setDrawer(false);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(errorInfo, \"test\");\n  };\n\n  const onReset = () => {\n    form.current.resetFields();\n  };\n  return (\n    <Layout>\n      <Header\n        style={{ backgroundColor: \"Blue\", textAlign: \"center\", color: \"white\" }}\n      >\n        {restaurantData.name} Menu\n      </Header>\n      <Content>\n        <Row gutter={[40, 0]}>\n          <Col span={18}>\n            <Title level={2}>List of Menu Items Avavilable</Title>\n          </Col>\n          <Col span={6}>\n            <Button block type=\"primary\" onClick={showDrawer}>\n              Add Menu Items\n            </Button>\n          </Col>\n        </Row>\n        <Row gutter={[40, 0]}>\n          <Col span={23}>\n            <Collapse\n              defaultActiveKey={[\"1\"]}\n              accordion={true}\n              expandIconPosition={expandIconPosition}\n            >\n              {restaurantData.menu.category.map((category) => {\n                return (\n                  <Panel header={category.cuisine} key={category.key}>\n                    <div className=\"site-card-wrapper\">\n                      <Row gutter={16}>\n                        {category.menuItems.map((menu) => {\n                          return (\n                            <Col span={8} key={menu.key}>\n                              <Card\n                                size=\"small\"\n                                title={menu.dish}\n                                bordered={true}\n                                style={{ width: 300 }}\n                              >\n                                Rs {menu.price}\n                              </Card>\n                            </Col>\n                          );\n                        })}\n                      </Row>\n                    </div>\n                  </Panel>\n                );\n              })}\n            </Collapse>\n          </Col>\n        </Row>\n        {drawer && (\n          <Drawer\n            title=\"Add Menu Items\"\n            placement=\"right\"\n            closable={false}\n            onClose={onClose}\n            width={480}\n            visible={visible}\n          >\n            <Form\n              ref={form}\n              initialValues={initialValues}\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"cuisine\"\n                label=\"Cusine Name\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input Cuisine\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Please Enter  Cuisine\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"dish\"\n                label=\"Dish Name\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input dish\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Please Enter dish name\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"price\"\n                label=\"Dish Price\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input dish price\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Please Enter  price\" />\n              </Form.Item>\n              <div style={{ textAlign: \"center\" }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Save\n                </Button>\n\n                <Button type=\"reset\" onClick={onReset}>\n                  Reset\n                </Button>\n              </div>\n            </Form>\n          </Drawer>\n        )}\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport LandingPage from \"./Components/LandingPage\";\nimport AddRestaurant from \"./Components/AddingRestaurant\";\nimport EditRestaurant from \"./Components/EditRestaurant\";\nimport ViewMenu from \"./Components/ViewMenu\";\nimport { Layout } from \"antd\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { resturantList } from \"../src/actions/restaurantActions\";\nfunction App() {\n  const { Header, Footer, Content } = Layout;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await axios.get(\"./data.json\");\n      dispatch(resturantList(data.products));\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <Layout>\n        <Header>\n          <Link to={\"/\"}> Restaurant and Menu Managemet System</Link>\n        </Header>\n        <br />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" exact={true} component={LandingPage} />\n            <Route exact path=\"/addRestaurant\" component={AddRestaurant} />\n            <Route\n              exact\n              path=\"/editRestaurant/:key\"\n              component={EditRestaurant}\n            />\n            <Route exact path=\"/viewresturant/:key\" component={ViewMenu} />\n          </Switch>\n        </Content>\n        <br />\n        <Footer style={{ textAlign: \"center\" }}>All Rights Reseverd</Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  RESTAURANT_LIST_DATA,\n  ADD_RESTAURANT,\n  EDIT_RESTAURANT,\n  ADD_MENU_ITEM,\n} from \"../constant\";\n\nconst getUpadtedList = (state, newValue) => {\n  let newData = [];\n  let z = {};\n  z.address = newValue.address;\n  z.avgcost = newValue.avgcost;\n  z.dt = newValue.dt;\n  z.name = newValue.name;\n  z.rating = newValue.rating;\n  z.key = (state.restaurantList.length + 1).toString();\n\n  z.menu = {\n    category: [\n      {\n        key: \"1\",\n        cuisine: newValue.cuisine,\n        menuItems: [{ key: \"1\", dish: newValue.dish, price: newValue.price }],\n      },\n    ],\n  };\n  newData.push(z);\n  let finalData = [...state.restaurantList, ...newData];\n\n  return finalData;\n};\n\nconst editRestaurantData = (state, newValue) => {\n  let items = state.restaurantList;\n  var foundIndex = items.findIndex((x) => x.key == newValue.key);\n  items[foundIndex] = newValue;\n\n  return items;\n};\nconst addMenuItems = (state, newValue) => {\n  let items = state.restaurantList;\n\n  let obj = {};\n  let objMenu = {};\n  let menu = [];\n  items.forEach((element) => {\n    if (element.key === newValue.key) {\n      var foundIndex = element.menu.category.findIndex(\n        (x) => x.cuisine == newValue.cuisine\n      );\n      if (foundIndex === -1) {\n        obj = {\n          cuisine: newValue.cuisine,\n          key: (element.menu.category.length + 1).toString(),\n        };\n        objMenu = { dish: newValue.dish, price: newValue.price };\n        menu.push(objMenu);\n        obj.menuItems = menu;\n        element.menu.category.push(obj);\n      } else {\n        var z = element.menu.category[foundIndex].menuItems.findIndex(\n          (y) => y.dish == newValue.dish\n        );\n        if (z === -1) {\n          objMenu = {\n            key: (\n              element.menu.category[foundIndex].menuItems.length + 1\n            ).toString(),\n            dish: newValue.dish,\n            price: newValue.price,\n          };\n          element.menu.category[foundIndex].menuItems.push(objMenu);\n        }\n      }\n    }\n  });\n\n  return items;\n};\n\nfunction restaurantReducer(state = { restaurantList: [] }, action) {\n  switch (action.type) {\n    case RESTAURANT_LIST_DATA:\n      return {\n        ...state,\n        restaurantList: action.payload,\n      };\n    case ADD_RESTAURANT:\n      return {\n        ...state,\n        restaurantList: getUpadtedList(state, action.payload),\n      };\n    case EDIT_RESTAURANT:\n      return {\n        ...state,\n        restaurantList: editRestaurantData(state, action.payload),\n      };\n    case ADD_MENU_ITEM:\n      return {\n        ...state,\n        restaurantList: addMenuItems(state, action.payload),\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { restaurantReducer };\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport  { restaurantReducer } from \"./reducers/restaurantReducer\"\nimport thunk from \"redux-thunk\";\n\nconst initialState = {};\n\nconst reducer = combineReducers({\n    restaurantReducer :restaurantReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}